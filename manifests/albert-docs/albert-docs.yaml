apiVersion: apps/v1
kind: Deployment
metadata:
  name: albert-docs
  namespace: albert-docs
  labels:
    app: albert-docs
spec:
  selector:
    matchLabels:
      app: albert-docs
  template:
    metadata:
      labels:
        app: albert-docs
      annotations: {}
    spec:
      containers:
        - name: albert-docs
          image: ghcr.io/betagouv/albert-docs:latest
          imagePullPolicy: Always
          env: []
          envFrom:
            - secretRef:
                name: "albert-docs"
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 10
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 0.1
              memory: 128Mi
            limits:
              cpu: 0.5
              memory: 512Mi

---
apiVersion: v1
kind: Service
metadata:
  name: albert-docs
  namespace: albert-docs
  labels:
    app: albert-docs
spec:
  ports:
    - appProtocol: http
      name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app: albert-docs

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: albert-docs
  namespace: albert-docs
  labels:
    app: albert-docs
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/auth-response-headers:
      X-Auth-Request-Email,X-Auth-Request-Preferred-,X-Auth-Request-Access-Token,
      X-Auth-Request-Roles,X-Auth-Request-User,X-Auth-Request-Groups,X-Forwarded-Groups,
      Authorization
    nginx.ingress.kubernetes.io/auth-signin: https://oauth-pc.kube-dev.incubateur.net/oauth2/start?rd=https%3A%2F%2F$host$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://oauth-pc.kube-dev.incubateur.net/oauth2/auth
    # nginx.ingress.kubernetes.io/auth-signin: https://oauth.kube-dev.incubateur.net/oauth2/start?rd=https%3A%2F%2F$host$escaped_request_uri
    # nginx.ingress.kubernetes.io/auth-url: https://oauth.kube-dev.incubateur.net/oauth2/auth
    nginx.ingress.kubernetes.io/client-max-body-size: "20M"
    nginx.ingress.kubernetes.io/proxy-body-size: "20M"
spec:
  rules:
    - host: albert-docs.kube-dev.incubateur.net
      http:
        paths:
          - backend:
              service:
                name: albert-docs
                port:
                  number: 80
            path: /
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - albert-docs.kube-dev.incubateur.net
      secretName: albert-docs-tls-secret
