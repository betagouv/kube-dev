#https://github.com/elastic/cloud-on-k8s/tree/2.14/deploy/eck-stack

eck-stack:
  eck-elasticsearch:
    enabled: true

    # Name of the Elasticsearch instance.
    #
    fullnameOverride: elasticsearch

    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      pathType: Prefix
      hosts:
        - host: "elastic.kube-dev.incubateur.net"
          path: "/"
      tls:
        enabled: true
        secretName: elasticsearch-tls

    http:
      service:
        metadata:
          annotations:
            # This is required for `ClusterIP` services (which are the default ECK service type) to be used with Ingress in GKE clusters.
            # cloud.google.com/neg: '{"ingress": true}'
            # cloud.google.com/app-protocols: '{"https":"HTTPS"}'
            # cloud.google.com/backend-config: '{"default": "elasticsearch"}'

    nodeSets:
      - name: default
        count: 3
        # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
        # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
        # and leave node.store.allow_mmap unset.
        # ref: https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-virtual-memory.html
        #
        config:
          node.store.allow_mmap: false
        # podTemplate:
        #   spec:
        #     containers:
        #     - name: elasticsearch
        #       resources:
        #         limits:
        #           memory: 2Gi
        #         requests:
        #           memory: 2Gi
  eck-kibana:
    enabled: true

    # Name of the Kibana instance.
    #
    fullnameOverride: kibana

    spec:
      elasticsearchRef:
        name: eck-elasticsearch
      config:
        xpack.fleet.packages:
          - name: apm
            version: latest

    ingress:
      enabled: true
      pathType: Prefix
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/auth-response-headers:
          X-Auth-Request-Email,X-Auth-Request-Preferred-,X-Auth-Request-Access-Token,
          X-Auth-Request-Roles,X-Auth-Request-User,X-Auth-Request-Groups,X-Forwarded-Groups,
          Authorization
        nginx.ingress.kubernetes.io/auth-signin: https://oauth.kube-dev.incubateur.net/oauth2/start?rd=https%3A%2F%2F$host$escaped_request_uri
        nginx.ingress.kubernetes.io/auth-url: https://oauth.kube-dev.incubateur.net/oauth2/auth
      hosts:
        - host: "kibana.kube-dev.incubateur.net"
          path: "/"
      tls:
        enabled: true
        secretName: kibana-tls

  eck-apm-server:
    enabled: true

    fullnameOverride: apm

    # Count of APM Server replicas to create.
    #
    count: 1

    # Reference to ECK-managed Elasticsearch resource.
    #
    elasticsearchRef:
      name: elasticsearch
    kibanaRef:
      name: kibana
    http:
      service:
        spec:
          ports:
            - name: http
              port: 8200
              targetPort: 8200

  eck-logstash:
    enabled: true
    elasticsearchRefs: []
    #  - namespace: ''
    #    name: ''
    #    clusterName: ''
    #    serviceName: ''
    #    secretName: ''

  eck-beats:
    enabled: false
    spec:
      daemonSet:
      elasticsearchRef:
        name: elasticsearch
      kibanaRef:
        name: kibana
